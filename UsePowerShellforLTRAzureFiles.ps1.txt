<#
    .DESCRIPTION
        An example runbook which takes On-demand backup for all file shares protected by Azure Backup in a subscription using the Run As Account (Service Principal)
    .NOTES
        AUTHOR: Azure Backup
        LASTEDIT: 02/10/2020
#>

Param
    ( 
        [Parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] 
        [String] 
        $AzureSubscriptionId, 

        [Parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] 
        [Int] 
        $RetentionDays=30
    ) 

$connectionName = "AzureRunAsConnection"

try
{
    # Get the connection "AzureRunAsConnection "
    $servicePrincipalConnection=Get-AutomationConnection -Name $connectionName

    "Logging in to Azure..."
    #Connect-AzAccount -CertificateThumbprint $Thumbprint -ApplicationId $ApplicationId -Tenant $TenantId -ServicePrincipal
    Connect-AzAccount -ServicePrincipal -TenantId $servicePrincipalConnection.TenantId -ApplicationId $servicePrincipalConnection.ApplicationId -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint
}
catch {
    if (!$servicePrincipalConnection)
    {
        $ErrorMessage = "Connection $connectionName not found."
        throw $ErrorMessage
    } else{
        Write-Error -Message $_.Exception
        throw $_.Exception
    }
}

Select-AzSubscription -SubscriptionId $AzureSubscriptionId 

#Get all ARM vault resources from all resource groups
$vaults = Get-AzRecoveryServicesVault
$currentDate = Get-Date
$RetailTill = $currentDate.AddDays($RetentionDays)
Write-Output ("Recoverypoints will be retained till " + $RetailTill)

foreach ($vault in $vaults)
{    
    Write-Output ("Working on Vault: " + $vault.Name)
    Set-AzRecoveryServicesVaultContext -Vault $vault
    $containers = Get-AzRecoveryServicesBackupContainer -ContainerType AzureStorage 
    Write-Output ("Got # of Backup Containers: " + $containers.Count)

    ForEach ($container in $containers)
    {
        Write-Output ("Working on container: " + $container.FriendlyName)
        $fileshares = Get-AzRecoveryServicesBackupItem -WorkloadType AzureFiles -Container $container
        Write-Output ("Got # of Backup Items/shares: " + $fileshares.Count)

        ForEach($fileShare in $fileshares)
        {
          Write-Output ("Working on FileShare: " + $fileShare.Name)
          Backup-AzRecoveryServicesBackupItem -Item $fileShare -ExpiryDateTimeUTC $RetailTill
        }
        Write-Output ("")
    }
    Write-Output ("")
}
