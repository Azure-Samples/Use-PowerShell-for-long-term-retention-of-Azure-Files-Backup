<#

#requires -version 2
#requires Az.Accounts 2.1.0 +
#requires Az.RecoveryServices 1.6.4 +

.SYNOPSIS
  <Overview of script>
    .DESCRIPTION
    An example runbook which takes On-demand backup for all file shares protected by Azure Backup in a subscription using the Run As Account (Service Principal)
.PARAMETER <AzureSubscriptionId>
    <The Azure subscription ID where the Azure Recovery Services Vault is located>
.PARAMETER <RetentionDays>
    <Number of days this backup will be retained>
.PARAMETER <RecoveryServicesVaultName>
    <Azure Recovery Services Vault Name, where we will lookup AzureFiles containers>
.INPUTS
  <Inputs if any, otherwise state None>
.OUTPUTS
  <Outputs if any, otherwise state None - example: Log file stored in C:\Windows\Temp\<name>.log>
.NOTES
  Version:        1.0
  Author:          Azure Backup
  Creation Date:  12/25/18
  Purpose/Change: Initial script development
  Version:        2.0
  Author:         Sam Hodgkinson
  Creation Date:  120/12/19
  Purpose/Change: Updating script to use AZ modules 

.EXAMPLE
  <Example goes here. Repeat this attribute for more than one example>


#>
Param 
    (    
        [Parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] 
        [String] 
        $AzureSubscriptionId, 
        [Parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] 
        [Int] 
        $RetentionDays=30,
        [Parameter(Mandatory=$true)][ValidateNotNullOrEmpty()]
        [String]  
        $RecoveryServicesVaultName

    ) 

$connectionName = "AzureRunAsConnection"
try
{
    # Get the connection "AzureRunAsConnection "
    $servicePrincipalConnection=Get-AutomationConnection -Name $connectionName         

    "Logging in to Azure..."
    Connect-AzAccount `
        -ServicePrincipal `
        -TenantId $servicePrincipalConnection.TenantId `
        -ApplicationId $servicePrincipalConnection.ApplicationId `
        -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint 
}
catch {
    if (!$servicePrincipalConnection)
    {
        $ErrorMessage = "Connection $connectionName not found."
        throw $ErrorMessage
    } else{
        Write-Error -Message $_.Exception
        throw $_.Exception
    }
}

Select-AzSubscription -SubscriptionId $AzureSubscriptionId 

#Get all ARM vault resources from all resource groups
$RecoveryVaults = Get-AzRecoveryServicesVault -Name $RecoveryServicesVaultName
$currentDate = Get-Date
$RetailTill = $currentDate.AddDays($RetentionDays)
Write-Output ("Recoverypoints will be retained till " + $RetailTill)

foreach ($RecoveryVault in $RecoveryVaults)
{    
    Write-Output ("Working on Vault: " + $RecoveryVault.Name)

    $containers = Get-AzRecoveryServicesBackupContainer -ContainerType AzureStorage -VaultId $RecoveryVault.ID
    Write-Output ("Got # of Backup Containers: " + $containers.Count)

    ForEach ($container in $containers)
    {
        Write-Output ("Working on container: " + $container.FriendlyName)
        $fileshares = Get-AzRecoveryServicesBackupItem -WorkloadType AzureFiles -Container $container
        Write-Output ("Got # of Backup Items/shares: " + $fileshares.Count)

        ForEach($fileShare in $fileshares)
        {
          Write-Output ("Working on FileShare: " + $fileShare.Name)
          Backup-AzRecoveryServicesBackupItem -Item $fileShare -ExpiryDateTimeUTC $RetailTill
        }
        Write-Output ("")
    }
    Write-Output ("")
}
